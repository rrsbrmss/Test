---
#  Attention!
# before first run these tasks please scroll tasks down
# uncomment task named "create custom docker network"
- name: TestTask
  hosts: all
  become: yes

  tasks:

  - name: Install aptitude (a vdrug ego net...)
    apt:
      name: aptitude
      state: latest
      update_cache: true

  - name: Install required system packages
    apt:
      pkg:
        - ca-certificates
        - curl
        - gnupg
        - lsb-release
        - python3-pip
        - python3-setuptools
      state: latest
      update_cache: true

  - name: Add Docker GPG apt Key
    apt_key:
      url: https://download.docker.com/linux/debian/gpg
      state: present

  - name: Add Docker Repository
    apt_repository:
      repo: deb https://download.docker.com/linux/debian bullseye stable
      state: present

  - name: Upd apt and inst docker softw
    apt:
      pkg:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-compose-plugin
      state: latest
      update_cache: true

  - name: Install Docker Module for Python
    pip:
      name: docker

  - name: start and enable docker service
    service:
      name: docker
      state: started
      enabled: true

#  uncomment below if that playbook run first time
#  - name: create custom docker network
#    command: docker network create --subnet=10.0.0.0/24 custom_network

  - name: pull & run nginx container
    docker_container:
      name: nginx
      image: nginx:alpine
      network_mode: custom_network
      ports:
        - "80:80"

  - name: pull & run apache1 container
    docker_container:
      name: apache1
      image: httpd:2.4-alpine
      network_mode: custom_network
      ports:
        - "8080:80"
      volumes:
        - "/srv/apache/conf:/usr/local/apache2/conf"
        - "/srv/apache/logs:/usr/local/apache2/logs"
  - name: pull & run apache2 container
    docker_container:
      name: apache2
      image: httpd:2.4-alpine
      network_mode: custom_network
      ports:
        - "8081:80"
      volumes:
        - "/srv/apache/conf:/usr/local/apache2/conf"
        - "/srv/apache/logs:/usr/local/apache2/logs"

  - name: pull & run nginx exporter container
    docker_container:
      name: nginx_exporter
      image: bitnami/nginx-exporter:latest
      network_mode: custom_network

  - name: pull & run node exporter container
    docker_container:
      name: node_exporter
      image: prom/node-exporter
      network_mode: custom_network

  - name: pull & run mysql exporter container
    docker_container:
      name: mysql_exporter
      image: prom/mysqld-exporter
      network_mode: custom_network

  - name: pull & run cadvisor container
    docker_container:
      name: cadvisor
      image: google/cadvisor
      network_mode: custom_network

  - name: pull & run prometheus container
    docker_container:
      name: prometheus
      image: prom/prometheus
      network_mode: custom_network

  - name: pull and run grafana container
    docker_container:
      name: grafana
      image: grafana/grafana
      network_mode: custom_network

  - name: pull & run fluentd container
    docker_container:
      name: fluentd
      image: fluent/fluentd
      network_mode: custom_network

  - name: pull & run mysql container
    docker_container:
      name: mysql
      image: mysql:5.7
      network_mode: custom_network
      env:
        MYSQL_ROOT_PASSWORD: password
 
  - name: pull & run php container
    docker_container:
      name: php-fpm
      image: php:7.2-fpm
      network_mode: custom_network
      volumes:
        - "/srv/www/html:/var/www/html"

  - name: create directories
    file:
      path: "/srv/{{item}}"
      state: directory
    with_items:
      - nginx/conf
      - apache/conf
      - mysql/conf
      - www

  - name: create config files
    template:
      src: "{{item.src}}"
      dest: "{{item.dest}}"
    with_items:
      - { src: "nginx.conf.j2", dest: "/srv/nginx/conf/nginx.conf"}
      - { src: "apache.conf.j2", dest: "/srv/apache/conf/apache.conf"}
      - { src: "mysql.conf.j2", dest: "/srv/mysql/conf/mysql.conf"}